swagger: "2.0" 
info: 
  description: "" 
  version: "1.0.0" 
  title: "OML framework" 
  termsOfService: "http://swagger.io/terms/" 
host: "localhost" 
basePath: "/api/v1" 
schemes: 
- "https" 
- "http" 
paths: 
  /miners: 
    get: 
      tags: 
      - "miners" 
      summary: "Returns a list of available miners"
      description: "" 
      produces: 
      - "application/json" 
      parameters: [] 
      responses: 
        "200": 
          description: "The list of miners" 
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Miner"
  
  /streams:
    get: 
      tags: 
      - 'streams'
      summary: 'Returns a list of created streams'
      description: ''
      produces:
      - 'application/json'
      parameters: []
      responses:
        '200':
          description: "A list of streams"
          schema:
            type: 'array'
            items:
              $ref: "#/definitions/Stream"
              
    post:
      tags:
        - 'streams'
      summary: 'Creates a stream'
      consumes: 
        - 'application/json'
      parameters:
      - in: 'body'
        name: 'stream'
        required: true
        schema:
          $ref: "#/definitions/Stream"
      responses:
        '201':
          description: 'OK'
        "404": 
          description: "Miner or stream not found"
    
  /streams/{streamId}:
    delete:
      tags:
        - 'streams'
      summary: 'Removes a stream'
      parameters:
      - name: "streamId" 
        in: "path" 
        description: "The id of the stream" 
        required: true 
        type: "string"
      responses:
        '200':
          description: 'Stream succesfully removed from list of streams'
        "404": 
          description: "Stream not found"
  
  /instances/{streamId}/{minerId}:
    post:
      tags: 
        - 'Instance of miner'
      parameters: 
      - name: "minerId" 
        in: "path" 
        description: "The id of the miner" 
        required: true 
        type: "string" 
      - name: "streamId" 
        in: "path" 
        description: "The id of the stream" 
        required: true 
        type: "string" 
      responses: 
        "201": 
          description: "OK" 
        "404": 
          description: "Miner or stream not found"
          
    get:
      tags: 
        - 'Instance of miner'
      summary: 'list of all instances of miner {minerId} assoc with stream {streamId}'
      parameters: 
      - name: "minerId" 
        in: "path" 
        description: "The id of the miner" 
        required: true 
        type: "string" 
      - name: "streamId" 
        in: "path" 
        description: "The id of the stream" 
        required: true 
        type: "string" 
      responses:
        '200':
          description: "A list of instances of miner associated with stream"
          schema:
            type: 'array'
            items:
              $ref: "#/definitions/MinerInstance"
        '404': 
          description: "Miner or stream not found"
  
  /instances/{instanceId}:
    delete:
      tags:
        - 'instance of miner'
      summary: 'Removes an instance of a miner'
      parameters:
      - name: "instanceId" 
        in: "path" 
        description: "The id of the instanceId" 
        required: true 
        type: "string"
      responses:
        '200':
          description: 'instanceId succesfully removed from list of instances'
        "404": 
          description: "Instance not found"
  /instances/{instanceId}/start:
    get:
      tags:
        - 'instance of miner'
      summary: 'Start instance of a miner'
      parameters:
      - name: "instanceId" 
        in: "path" 
        description: "The id of the instanceId" 
        required: true 
        type: "string"
      responses:
        '200':
          description: 'Instance succesfully started'
        "404": 
          description: "Instance not found"
          
  /instances/{instanceId}/stop:
    get:
      tags:
        - 'instance of miner'
      summary: 'Stop instance of a miner'
      parameters:
      - name: "instanceId" 
        in: "path" 
        description: "The id of the instanceId" 
        required: true 
        type: "string"
      responses:
        '200':
          description: 'Instance succesfully stopped'
        "404": 
          description: "Instance not found"
  
  /instances/{instanceId}/status:
    get:
      tags:
        - 'instance of miner'
      summary: 'Stop instance of a miner'
      parameters:
      - name: "instanceId" 
        in: "path" 
        description: "The id of the instanceId" 
        required: true 
        type: "string"
      responses:
        '200': 
          description: 'A boolean whether the instance is mining or not' 
          schema:
            type: 'boolean'
        "404": 
          description: "Instance not found"
  
        
  /view/{instanceId}:
    get:
      summary: "Get view from miner" 
      parameters:
        - name: "instanceId" 
          in: "path" 
          description: "The id of the miner" 
          required: true 
          type: "string" 
      produces:
        - "string" 
      responses: 
        '200': 
          description: 'A string representing a view created by the instance' 
          schema:
              type: "string"
        "404": 
          description: "Miner or stream not found"
    
  
definitions: 
  Miner: 
    type: "object" 
    properties: 
      id: 
        type: "string" 
        description: "This is the unique id of the miner"
      description:
        type: "string"
        description: "A description of the capabilities of the miner"
      configurationParameters:
        type: "array"
        description: "Set of parameters required to configure the miner"
        items:
          $ref: "#/definitions/MinerParameter"
      viewParameters:
        type: "array"
        description: "Set of parameters required to generate a view of the status of the miner"
        items:
          $ref: "#/definitions/MinerParameter"
    
  Stream:
    type: 'object'
    properties:
      id: 
        type: 'string'
        description: 'this is a unique id of the stream'
      name: 
        type: 'string'
        description: 'The name of the stream'
      basehost:
        type: 'string'
        description: 'The basehost of the stream'
  
  MinerInstance:
    type: 'object'
    properties:
      id: 
        type: 'string'
        description: 'unique ID of the instance of a miner'
      minerid: 
        type: 'string'
        description: 'ID of the associated miner'
      streamid:
        type: 'string'
        description: 'ID of associated stream'
  
  MinerParameter:
    type: "object"
    properties:
      name:
        type: "string"
        description: "The name of the parameter"
      type:
        type: "string"
        description: "The type of the parameter"
        enum:
          - "string"
          - "integer"
          - "double"